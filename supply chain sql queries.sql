-- to see what columns are there in customer table
SHOW COLUMNS FROM customer;

-- changing customer_name to customer_unique due to typo
ALTER TABLE customer
CHANGE customer_name customer_unique text;

-- customer table
select * from customer;

-- updating EE.UU. to USA
UPDATE customer
SET customer_country = 'USA'
WHERE customer_country = 'EE. UU.';


-- total distinct customer_id, customer_city, customer_state, customer_zipcode, customer_country 
select 
count(distinct customer_id) as number_of_distinct_customers,  
count(distinct customer_city) as number_of_distinct_city,
count(distinct customer_state) as number_of_distinct_state,
count(distinct customer_zipcode) as number_of_distinct_zipcode,
count(distinct customer_country) as number_of_distinct_country
from customer;

-- top 10 city with most customer
select customer_city, customer_state, count(distinct customer_id) as number_of_customer from customer
group by customer_city, customer_state
order by number_of_customer desc
limit 10;

-- customer segment distribution
select customer_segment, count(*) as number_of_customers
from customer
group by customer_segment
order by number_of_customers desc;

-- customer department distribution
select department_name, count(*) as number_of_customers, 
rank() over(order by count(*) desc) as ranking
from customer
group by department_name;


-- Total sales by region
select 
order_region, round(sum(sales), 2) as total_sales, rank() over(order by round(sum(sales), 2) desc) as ranking
from orders
group by order_region
order by total_sales desc;

-- changing ï»¿product_unique to product_unique
ALTER TABLE product
CHANGE ï»¿product_unique product_unique text;

-- top 10 product by sales
select product_name, round(sum(sales), 2) as total_sales, 
dense_rank() over(order by round(sum(sales), 2) desc) as dense_ranking
from
product p 
join orders o on p.product_unique = o.product_unique
group by product_name;


-- changing column name
alter table shipping
change ï»¿shipping_unique shipping_unique text;

alter table shipping
change `shipping _mode` shipping_mode text;

-- average delivery day by shipping mode 
select shipping_mode, avg(days_for_shipping_real) as avg_shipping_days
from shipping
group by shipping_mode
order by avg_shipping_days;

-- late delivries by region
select order_region, count(*) as number_of_late_delivries,
dense_rank() over(order by count(*) desc)
from shipping s
join orders o
on s.order_unique = o.order_unique
where late_delivery_risk = 1
group by order_region;

-- top 10 customer by profit
select concat(customer_fname, ' ', customer_lname) as customer_fullname, 
round(sum(order_item_profit_ratio * sales), 2) as estimated_profit
from customer c
join orders o 
on c.customer_unique = o.customer_unique
group by customer_fullname
order by estimated_profit desc
limit 10;



-- Category Performance: How much revenue is generated by each product category?



select category_name, round(sum(sales), 2) as total_revenue 
from product p
join orders o 
on p.product_unique = o.product_unique
group by category_name
order by total_revenue desc;


-- distribution of order status
select order_status, count(*) as total_orders
from orders
group by order_status
order by total_orders desc;

-- distribution of order status
select payment_type, count(*) as total_orders, round(sum(sales), 2) as total_sales 
from orders
group by payment_type
order by total_sales, total_orders desc;

select avg(days_for_shipping_real - days_for_shipment_scheduled) as avg_delay
from shipping;

-- Shipping performane: real v/s scheduled
select order_region, avg(days_for_shipping_real - days_for_shipment_scheduled) as avg_delay
from orders o 
join shipping s 
on o.order_unique = s.order_unique
group by o.order_region
order by avg_delay desc;


-- monthly sales trend
select monthname(shipping_date_date_orders) from shipping;

select * from shipping;

describe shipping;


SELECT 
  MONTH(STR_TO_DATE(shipping_date_date_orders, '%m/%d/%Y %H:%i')) AS month_number,
  round(sum(sales), 2) as total_sales
  from orders o
join shipping s 
on o.order_unique = s.order_unique
group by month_number
order by month_number;

-- yearly sales trend
SELECT 
  YEAR(STR_TO_DATE(shipping_date_date_orders, '%m/%d/%Y %H:%i')) AS year,
  round(sum(sales), 2) as total_sales
  from orders o
join shipping s 
on o.order_unique = s.order_unique
group by year
order by year;


--  Percentage of Late Deliveries by Shipping Mode
SELECT shipping_mode,
       COUNT(CASE WHEN late_delivery_risk = 1 THEN 1 END) * 100.0 / COUNT(*) AS late_percentage
FROM shipping
GROUP BY shipping_mode;


-- most profitable product
select product_name, round(sum(order_item_profit_ratio * sales), 2) as total_profit
from orders o 
join product p
on o.product_unique = p.product_unique
group by product_name
order by total_profit desc; 


-- order shipped late vs on time
select delivery_status, count(*) as total_orders
from shipping
group by delivery_status
order by total_orders desc; 


-- Top 3 Categories by Sales in Each

select order_region, category_name, total_sales
from
	(select order_region, category_name, 
		round(sum(sales), 2) as total_sales,
		rank() over(partition by order_region order by round(sum(sales), 2) desc) as sales_ranked
	from orders o
	join product p
	on o.product_unique = p.product_unique
	group by order_region, category_name) as ranked
where sales_ranked <= 3;



